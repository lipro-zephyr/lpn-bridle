.. rubric:: Simple test execution on target

(text in bold is a command input)

.. tabs::

   .. group-tab:: Basics

      .. parsed-literal::
         :class: highlight-console notranslate

         :bgn:`uart:~$` **hello -h**
         hello - say hello
         :bgn:`uart:~$` **hello**
         Hello from shell.

         :bgn:`uart:~$` **hwinfo devid**
         Length: 8
         ID: 0xbd774b2618daaa7d

         :bgn:`uart:~$` **kernel version**
         Zephyr version |zephyr_version_number_em|

         :bgn:`uart:~$` **bridle version**
         Bridle version |version_number_em|

         :bgn:`uart:~$` **bridle version long**
         Bridle version |longversion_number_em|

         :bgn:`uart:~$` **bridle info**
         Zephyr: |zephyr_release_number_em|
         Bridle: |release_number_em|

         :bgn:`uart:~$` **device list**
         devices:
         - clock-controller\ @\ 40008000 (READY)
         - reset-controller\ @\ 4000c000 (READY)
         - cdc_acm_console_uart (READY)
         - timer\ @\ 40054000 (READY)
         - gpio\ @\ 40014000 (READY)
         - adc\ @\ 4004c000 (READY)
         - flash-controller\ @\ 18000000 (READY)
         - i2c\ @\ 40044000 (READY)
         - pwm\ @\ 40050000 (READY)
         - vreg\ @\ 40064000 (READY)
         - pwm_leds (READY)

         :bgn:`uart:~$` **history**
         [  0] history
         [  1] device list
         [  2] bridle info
         [  3] bridle version long
         [  4] bridle version
         [  5] kernel version
         [  6] hwinfo devid
         [  7] hello
         [  8] hello -h

   .. group-tab:: VREG

      Operate with the on-chip voltage regulator unit:

      .. parsed-literal::
         :class: highlight-console notranslate

         :bgn:`uart:~$` **regulator vlist vreg@40064000**
         0.800 V
         0.850 V
         0.900 V
         0.950 V
         1.000 V
         1.050 V
         1.100 V
         1.150 V
         1.200 V
         1.250 V
         1.300 V

      Trigger a power-of/on sequence:

      .. parsed-literal::
         :class: highlight-console notranslate

         :bgn:`uart:~$` **hwinfo reset_cause**
         reset caused by:
         - pin

         :bgn:`uart:~$` **regulator disable vreg@40064000**
         \*\*\* Booting Zephyr OS … … …\*\*\*
         Hello World! I'm THE SHELL from picoboy

         :bgn:`uart:~$` **hwinfo reset_cause**
         reset caused by:
         - power-on reset

   .. group-tab:: LED

      .. note:: **PWM LED conflicts with GPIO!**

         Operations with the red user LED in PWM mode will fail when ever
         the corresponding GPIO line 5 was configured as digital output.
         This condition is irreversible at runtime within the shell and
         :strong:`requires a system reset`.

      Operate with the red user LED :hwftlbl-led:`PWM_LED`
      at :rpi-pico-pio:`GP5` / :rpi-pico-pwm:`PWM5` (PWM2CHA):

      .. parsed-literal::
         :class: highlight-console notranslate

         :bgn:`uart:~$` **led on pwm_leds 0**
         pwm_leds: turning on LED 0

         :bgn:`uart:~$` **led set_brightness pwm_leds 0 10**
         pwm_leds: setting LED 0 brightness to 10

         :bgn:`uart:~$` **led set_brightness pwm_leds 0 50**
         pwm_leds: setting LED 0 brightness to 50

         :bgn:`uart:~$` **led set_brightness pwm_leds 0 100**
         pwm_leds: setting LED 0 brightness to 100

         :bgn:`uart:~$` **led off pwm_leds 0**
         pwm_leds: turning off LED 0

   .. group-tab:: PWM

      .. note:: **PWM conflicts with GPIO!**

         Operations with the red user LED in PWM mode will fail when ever
         the corresponding GPIO line 5 was configured as digital output.
         This condition is irreversible at runtime within the shell and
         :strong:`requires a system reset`.

      Operate with the red user LED :hwftlbl-led:`PWM_LED`
      at :rpi-pico-pio:`GP5` / :rpi-pico-pwm:`PWM5` (PWM2CHA):

      .. parsed-literal::
         :class: highlight-console notranslate

         :bgn:`uart:~$` **pwm usec pwm@40050000 5 20000 20000**
         :bgn:`uart:~$` **pwm usec pwm@40050000 5 20000 19000**
         :bgn:`uart:~$` **pwm usec pwm@40050000 5 20000 18000**
         :bgn:`uart:~$` **pwm usec pwm@40050000 5 20000 17000**
         :bgn:`uart:~$` **pwm usec pwm@40050000 5 20000 16000**
         :bgn:`uart:~$` **pwm usec pwm@40050000 5 20000 15000**
         :bgn:`uart:~$` **pwm usec pwm@40050000 5 20000 10000**
         :bgn:`uart:~$` **pwm usec pwm@40050000 5 20000 5000**
         :bgn:`uart:~$` **pwm usec pwm@40050000 5 20000 2500**
         :bgn:`uart:~$` **pwm usec pwm@40050000 5 20000 500**
         :bgn:`uart:~$` **pwm usec pwm@40050000 5 20000 0**

      Operate with the :hwftlbl-spk:`PASSIVE` magnetic speaker
      at :rpi-pico-pio:`GP15` / :rpi-pico-pwm:`PWM15` (PWM7CHB):

      #. concert pitch: 440 ㎐
      #. Piezo middle frequency: 1,000 ㎑
      #. Piezo resonance: 4,000 ㎑
      #. Piezo high frequency: 10,000 ㎑

      .. parsed-literal::
         :class: highlight-console notranslate

         :bgn:`uart:~$` **pwm usec pwm@40050000 15 2273 1136**
         :bgn:`uart:~$` **pwm usec pwm@40050000 15 2000 1000**
         :bgn:`uart:~$` **pwm usec pwm@40050000 15 250 125**
         :bgn:`uart:~$` **pwm usec pwm@40050000 15 100 50**

   .. group-tab:: GPIO

      Operate with the red user LED :hwftlbl-led:`LED`
      at :rpi-pico-pio:`GP5`:

      .. parsed-literal::
         :class: highlight-console notranslate

         :bgn:`uart:~$` **gpio get gpio@40014000 5**
         0

         :bgn:`uart:~$` **gpio conf gpio@40014000 5 oh0**

         :bgn:`uart:~$` **gpio set gpio@40014000 5 1**
         :bgn:`uart:~$` **gpio set gpio@40014000 5 0**

         :bgn:`uart:~$` **gpio blink gpio@40014000 5**
         Hit any key to exit

      Operate with the user joystick center button :hwftlbl-btn:`ENTER`
      at :rpi-pico-pio:`GP0`:

      .. parsed-literal::
         :class: highlight-console notranslate

         :bgn:`uart:~$` **gpio get gpio@40014000 0**
         0

         :bgn:`uart:~$` **gpio conf gpio@40014000 0 iul**
         :bgn:`uart:~$` **gpio get gpio@40014000 0**
         0
         :bgn:`uart:~$` **gpio get gpio@40014000 0**
         1
         :bgn:`uart:~$` **gpio get gpio@40014000 0**
         0

   .. group-tab:: ADC

      Operate with the channels:

      - :rpi-pico-adc:`ADC0`, pulled to unknown voltage level
      - :rpi-pico-adc:`ADC1`, pulled to unknown voltage level
      - :rpi-pico-adc:`ADC2`, pulled to unknown voltage level
      - :rpi-pico-adc:`ADC3`, pulled to unknown voltage level
      - on-chip temperature sensor on channel :rpi-pico-adc:`ADC4`

      .. parsed-literal::
         :class: highlight-console notranslate

         :bgn:`uart:~$` **adc adc@4004c000 resolution 12**
         :bgn:`uart:~$` **adc adc@4004c000 channel id 0**
         :bgn:`uart:~$` **adc adc@4004c000 channel id 1**
         :bgn:`uart:~$` **adc adc@4004c000 channel id 2**
         :bgn:`uart:~$` **adc adc@4004c000 channel id 3**
         :bgn:`uart:~$` **adc adc@4004c000 channel id 4**

         :bgn:`uart:~$` **adc adc@4004c000 read 0**
         read: 681

         :bgn:`uart:~$` **adc adc@4004c000 read 1**
         read: 617

         :bgn:`uart:~$` **adc adc@4004c000 read 2**
         read: 745

         :bgn:`uart:~$` **adc adc@4004c000 read 3**
         read: 692

         :bgn:`uart:~$` **adc adc@4004c000 read 4**
         read: 749

   .. group-tab:: Timer

      Operate with the on-chip timer unit:

      .. parsed-literal::
         :class: highlight-console notranslate

         :bgn:`uart:~$` **timer oneshot timer@40054000 0 1000000**
         :bgn:`timer@40054000: Alarm triggered`

   .. group-tab:: Flash access

      .. parsed-literal::
         :class: highlight-console notranslate

         :bgn:`uart:~$` **flash read flash-controller@18000000 17af0 40**
         00017AF0: 70 69 63 6f 62 6f 79 00  48 65 6c 6c 6f 20 57 6f \|picoboy. Hello Wo\|
         00017B00: 72 6c 64 21 20 49 27 6d  20 54 48 45 20 53 48 45 \|rld! I'm  THE SHE\|
         00017B10: 4c 4c 20 66 72 6f 6d 20  25 73 0a 00 69 6c 6c 65 \|LL from  %s..ille\|
         00017B20: 67 61 6c 20 6f 70 74 69  6f 6e 20 2d 2d 20 25 63 \|gal opti on -- %c\|

         :bgn:`uart:~$` **flash read flash-controller@18000000 e0000 40**
         000E0000: ff ff ff ff ff ff ff ff  ff ff ff ff ff ff ff ff \|........ ........\|
         000E0010: ff ff ff ff ff ff ff ff  ff ff ff ff ff ff ff ff \|........ ........\|
         000E0020: ff ff ff ff ff ff ff ff  ff ff ff ff ff ff ff ff \|........ ........\|
         000E0030: ff ff ff ff ff ff ff ff  ff ff ff ff ff ff ff ff \|........ ........\|

         :bgn:`uart:~$` **flash test flash-controller@18000000 e0000 1000 2**
         Erase OK.
         Write OK.
         Verified OK.
         Erase OK.
         Write OK.
         Verified OK.
         Erase-Write-Verify test done.

         :bgn:`uart:~$` **flash read flash-controller@18000000 e0000 40**
         000E0000: 00 01 02 03 04 05 06 07  08 09 0a 0b 0c 0d 0e 0f \|........ ........\|
         000E0010: 10 11 12 13 14 15 16 17  18 19 1a 1b 1c 1d 1e 1f \|........ ........\|
         000E0020: 20 21 22 23 24 25 26 27  28 29 2a 2b 2c 2d 2e 2f \| !"#$%&' ()*+,-./\|
         000E0030: 30 31 32 33 34 35 36 37  38 39 3a 3b 3c 3d 3e 3f \|01234567 89:;<=>?\|

         :bgn:`uart:~$` **flash page_info e0000**
         Page for address 0xe0000:
         start offset: 0xe0000
         size: 4096
         index: 224

         :bgn:`uart:~$` **flash erase flash-controller@18000000 e0000 1000**
         Erase success.

         :bgn:`uart:~$` **flash read flash-controller@18000000 e0000 40**
         000E0000: ff ff ff ff ff ff ff ff  ff ff ff ff ff ff ff ff \|........ ........\|
         000E0010: ff ff ff ff ff ff ff ff  ff ff ff ff ff ff ff ff \|........ ........\|
         000E0020: ff ff ff ff ff ff ff ff  ff ff ff ff ff ff ff ff \|........ ........\|
         000E0030: ff ff ff ff ff ff ff ff  ff ff ff ff ff ff ff ff \|........ ........\|

   .. group-tab:: I2C

      The |PicoBoy| has the on-board acceleration sensor connected on I2C0.

      .. parsed-literal::
         :class: highlight-console notranslate

         :bgn:`uart:~$` **i2c scan i2c@40044000**
              0  1  2  3  4  5  6  7  8  9  a  b  c  d  e  f
         00:             -- -- -- -- -- -- -- -- -- -- -- --
         10: -- -- -- -- -- -- -- -- 18 -- -- -- -- -- -- --
         20: -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- --
         30: -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- --
         40: -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- --
         50: -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- --
         60: -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- --
         70: -- -- -- -- -- -- -- --
         1 devices found on i2c\ @\ 40044000

      The I2C address ``0x18`` is a Sensortek STK8BA58_ 3D Acceleration Sensor
      and their Chip-ID can read from register ``0x0``. The Chip-ID must be
      ``0x87``:

      .. parsed-literal::
         :class: highlight-console notranslate

         :bgn:`uart:~$` **i2c read_byte i2c@40044000 18 0**
         Output: 0x87
