##############################################################################
###
### ATTENTION:
###
### This test suite will be controlled by the standard integration platforms
### and must be invoked with the corresponding quarantine list. Otherwise,
### many board-shield constellations will terminate with an error.
###
###     west twister -G --quarantine-list bridle/tests/quarantine.yaml … … …
###
##############################################################################
common:
  tags: base shields grove
  build_only: true
  build_on_all: true
  filter: dt_compat_enabled("seeed,grove-laced-if") and
          dt_compat_enabled("seeed,grove-connector")
  # platform_exclude:
  #   # stm32h735g_disco.yaml has "arduino_gpio", but
  #   # there is no "arduino-header-r3" node in DTS
  #   - stm32h735g_disco
  #
  # NOTE: Side effects were observed with the `platform_exclude` statement
  # when it is used within the `common` section as well as in individual
  # test cases. The test plan then may be set up incompletely with invalid
  # content and there is a high risk that test cases will not be included
  # in the test plan without being noticed!
  #
  # AVOID `platform_exclude` statement here in the `common` section!
  #
  integration_platforms:
    - arduino_zero
    - mimxrt1010_evk
    - mimxrt1060_evk
    - mimxrt1060_evkb
    - nucleo_f303re
    - nucleo_f401re
    - nucleo_f413zh
    - nucleo_f746zg
    - nucleo_f767zi
    - rpi_pico
    - rpi_pico_w
    - seeed_xiao_samd21
    - seeeduino_xiao
    - seeeduino_cm0
    - seeeduino_lotus
    - waveshare_rp2040_one
    - waveshare_rp2040_zero
    - waveshare_rp2040_matrix
    - waveshare_rp2040_tiny
    - waveshare_rp2040_eth
    - waveshare_rp2040_lcd_0_96
    - waveshare_rp2040_plus
    - waveshare_rp2040_plus@16mb
tests:
  #
  # Grove Button by simple GPIO on Grove Base Shield
  #
  grove.base.v2.grove_btn.gpio.d0:
    depends_on: arduino_gpio
    filter: dt_nodelabel_enabled("grove_d0_header") and
            dt_nodelabel_enabled("grove_uart_header") and
            dt_label_with_parent_compat_enabled("grove_btn_d0", "gpio-keys")
    extra_args: SHIELD=seeed_grove_base_v2;grove_btn_d0
  grove.base.v1.grove_btn.gpio.d0:
    depends_on: arduino_gpio
    filter: ( dt_nodelabel_enabled("grove_d0_header") or
              dt_nodelabel_enabled("grove_uart_header") ) and
            dt_label_with_parent_compat_enabled("grove_btn_d0", "gpio-keys")
    extra_args: SHIELD=seeed_grove_base_v1;grove_btn_d0
  grove.base.v2.grove_btn.gpio.d1:
    depends_on: arduino_gpio
    filter: dt_nodelabel_enabled("grove_d0_header") and
            dt_nodelabel_enabled("grove_uart_header") and
            dt_label_with_parent_compat_enabled("grove_btn_d1", "gpio-keys")
    extra_args: SHIELD=seeed_grove_base_v2;grove_btn_d1
  grove.base.v1.grove_btn.gpio.d1:
    depends_on: arduino_gpio
    filter: ( dt_nodelabel_enabled("grove_d1_header") or
              dt_nodelabel_enabled("grove_d0_header") or
              dt_nodelabel_enabled("grove_uart_header") ) and
            dt_label_with_parent_compat_enabled("grove_btn_d1", "gpio-keys")
    extra_args: SHIELD=seeed_grove_base_v1;grove_btn_d1
  grove.base.v2.grove_btn.gpio.d2:
    depends_on: arduino_gpio
    filter: dt_nodelabel_enabled("grove_d2_header") and
            dt_label_with_parent_compat_enabled("grove_btn_d2", "gpio-keys")
    extra_args: SHIELD=seeed_grove_base_v2;grove_btn_d2
  grove.base.v1.grove_btn.gpio.d2:
    depends_on: arduino_gpio
    filter: ( dt_nodelabel_enabled("grove_d2_header") or
              dt_nodelabel_enabled("grove_d1_header") ) and
            dt_label_with_parent_compat_enabled("grove_btn_d2", "gpio-keys")
    extra_args: SHIELD=seeed_grove_base_v1;grove_btn_d2
  grove.base.v2.grove_btn.gpio.d3:
    depends_on: arduino_gpio
    filter: ( dt_nodelabel_enabled("grove_d3_header") or
              dt_nodelabel_enabled("grove_d2_header") ) and
            dt_label_with_parent_compat_enabled("grove_btn_d3", "gpio-keys")
    extra_args: SHIELD=seeed_grove_base_v2;grove_btn_d3
  grove.base.v1.grove_btn.gpio.d3:
    depends_on: arduino_gpio
    filter: ( dt_nodelabel_enabled("grove_d3_header") or
              dt_nodelabel_enabled("grove_d2_header") ) and
            dt_label_with_parent_compat_enabled("grove_btn_d3", "gpio-keys")
    extra_args: SHIELD=seeed_grove_base_v1;grove_btn_d3
  grove.base.v2.grove_btn.gpio.d4:
    depends_on: arduino_gpio
    filter: ( dt_nodelabel_enabled("grove_d4_header") or
              dt_nodelabel_enabled("grove_d3_header") ) and
            dt_label_with_parent_compat_enabled("grove_btn_d4", "gpio-keys")
    extra_args: SHIELD=seeed_grove_base_v2;grove_btn_d4
  grove.base.v1.grove_btn.gpio.d4:
    depends_on: arduino_gpio
    filter: ( dt_nodelabel_enabled("grove_d4_header") or
              dt_nodelabel_enabled("grove_d3_header") ) and
            dt_label_with_parent_compat_enabled("grove_btn_d4", "gpio-keys")
    extra_args: SHIELD=seeed_grove_base_v1;grove_btn_d4
  grove.base.v2.grove_btn.gpio.d5:
    depends_on: arduino_gpio
    filter: ( dt_nodelabel_enabled("grove_d5_header") or
              dt_nodelabel_enabled("grove_d4_header") ) and
            dt_label_with_parent_compat_enabled("grove_btn_d5", "gpio-keys")
    extra_args: SHIELD=seeed_grove_base_v2;grove_btn_d5
  grove.base.v1.grove_btn.gpio.d5:
    depends_on: arduino_gpio
    filter: ( dt_nodelabel_enabled("grove_d5_header") or
              dt_nodelabel_enabled("grove_d4_header") ) and
            dt_label_with_parent_compat_enabled("grove_btn_d5", "gpio-keys")
    extra_args: SHIELD=seeed_grove_base_v1;grove_btn_d5
  grove.base.v2.grove_btn.gpio.d6:
    depends_on: arduino_gpio
    filter: ( dt_nodelabel_enabled("grove_d6_header") or
              dt_nodelabel_enabled("grove_d5_header") ) and
            dt_label_with_parent_compat_enabled("grove_btn_d6", "gpio-keys")
    extra_args: SHIELD=seeed_grove_base_v2;grove_btn_d6
    platform_exclude:
      - pan1781_evb
      - pan1782_evb
  grove.base.v1.grove_btn.gpio.d6:
    depends_on: arduino_gpio
    filter: ( dt_nodelabel_enabled("grove_d6_header") or
              dt_nodelabel_enabled("grove_d5_header") ) and
            dt_label_with_parent_compat_enabled("grove_btn_d6", "gpio-keys")
    extra_args: SHIELD=seeed_grove_base_v1;grove_btn_d6
    platform_exclude:
      - pan1781_evb
      - pan1782_evb
  grove.base.v2.grove_btn.gpio.d7:
    depends_on: arduino_gpio
    filter: ( dt_nodelabel_enabled("grove_d7_header") or
              dt_nodelabel_enabled("grove_d6_header") ) and
            dt_label_with_parent_compat_enabled("grove_btn_d7", "gpio-keys")
    extra_args: SHIELD=seeed_grove_base_v2;grove_btn_d7
    platform_exclude:
      - pan1781_evb
      - pan1782_evb
  grove.base.v1.grove_btn.gpio.d7:
    depends_on: arduino_gpio
    filter: ( dt_nodelabel_enabled("grove_d7_header") or
              dt_nodelabel_enabled("grove_d6_header") ) and
            dt_label_with_parent_compat_enabled("grove_btn_d7", "gpio-keys")
    extra_args: SHIELD=seeed_grove_base_v1;grove_btn_d7
    platform_exclude:
      - pan1781_evb
      - pan1782_evb
  grove.base.v2.grove_btn.gpio.d8:
    depends_on: arduino_gpio
    filter: ( dt_nodelabel_enabled("grove_d8_header") or
              dt_nodelabel_enabled("grove_d7_header") ) and
            dt_label_with_parent_compat_enabled("grove_btn_d8", "gpio-keys")
    extra_args: SHIELD=seeed_grove_base_v2;grove_btn_d8
    platform_exclude:
      - pan1781_evb
      - pan1782_evb
  grove.base.v1.grove_btn.gpio.d8:
    depends_on: arduino_gpio
    filter: ( dt_nodelabel_enabled("grove_d8_header") or
              dt_nodelabel_enabled("grove_d7_header") ) and
            dt_label_with_parent_compat_enabled("grove_btn_d8", "gpio-keys")
    extra_args: SHIELD=seeed_grove_base_v1;grove_btn_d8
    platform_exclude:
      - pan1781_evb
      - pan1782_evb
  grove.base.v2.grove_btn.gpio.d9:
    depends_on: arduino_gpio
    filter: dt_nodelabel_enabled("grove_d8_header") and
            dt_label_with_parent_compat_enabled("grove_btn_d9", "gpio-keys")
    extra_args: SHIELD=seeed_grove_base_v2;grove_btn_d9
    platform_exclude:
      - pan1781_evb
      - pan1782_evb
  grove.base.v1.grove_btn.gpio.d9:
    depends_on: arduino_gpio
    filter: ( dt_nodelabel_enabled("grove_d9_header") or
              dt_nodelabel_enabled("grove_d8_header") ) and
            dt_label_with_parent_compat_enabled("grove_btn_d9", "gpio-keys")
    extra_args: SHIELD=seeed_grove_base_v1;grove_btn_d9
    platform_exclude:
      - pan1781_evb
      - pan1782_evb
  # grove.base.v2.grove_btn.gpio.d10
  grove.base.v1.grove_btn.gpio.d10:
    depends_on: arduino_gpio
    filter: ( dt_nodelabel_enabled("grove_d10_header") or
              dt_nodelabel_enabled("grove_d9_header") ) and
            dt_label_with_parent_compat_enabled("grove_btn_d10", "gpio-keys")
    extra_args: SHIELD=seeed_grove_base_v1;grove_btn_d10
  # grove.base.v2.grove_btn.gpio.d11
  grove.base.v1.grove_btn.gpio.d11:
    depends_on: arduino_gpio
    filter: ( dt_nodelabel_enabled("grove_d11_header") or
              dt_nodelabel_enabled("grove_d10_header") ) and
            dt_label_with_parent_compat_enabled("grove_btn_d11", "gpio-keys")
    extra_args: SHIELD=seeed_grove_base_v1;grove_btn_d11
  # grove.base.v2.grove_btn.gpio.d12
  grove.base.v1.grove_btn.gpio.d12:
    depends_on: arduino_gpio
    filter: ( dt_nodelabel_enabled("grove_d12_header") or
              dt_nodelabel_enabled("grove_d11_header") ) and
            dt_label_with_parent_compat_enabled("grove_btn_d12", "gpio-keys")
    extra_args: SHIELD=seeed_grove_base_v1;grove_btn_d12
  # grove.base.v2.grove_btn.gpio.d13
  grove.base.v1.grove_btn.gpio.d13:
    depends_on: arduino_gpio
    filter: ( dt_nodelabel_enabled("grove_d13_header") or
              dt_nodelabel_enabled("grove_d12_header") ) and
            dt_label_with_parent_compat_enabled("grove_btn_d13", "gpio-keys")
    extra_args: SHIELD=seeed_grove_base_v1;grove_btn_d13
  grove.base.v2.grove_btn.gpio.d14:
    depends_on: arduino_gpio
    filter: dt_nodelabel_enabled("grove_a0_header") and
            dt_label_with_parent_compat_enabled("grove_btn_d14", "gpio-keys")
    extra_args: SHIELD=seeed_grove_base_v2;grove_btn_d14
    platform_exclude:
      - frdm_kw41z
      - hifive1
      - hifive1_revb
  grove.base.v1.grove_btn.gpio.d14:
    depends_on: arduino_gpio
    filter: dt_nodelabel_enabled("grove_a0_header") and
            dt_label_with_parent_compat_enabled("grove_btn_d14", "gpio-keys")
    extra_args: SHIELD=seeed_grove_base_v1;grove_btn_d14
    platform_exclude:
      - frdm_kw41z
      - hifive1
      - hifive1_revb
  grove.base.v2.grove_btn.gpio.d15:
    depends_on: arduino_gpio
    filter: ( dt_nodelabel_enabled("grove_a1_header") or
              dt_nodelabel_enabled("grove_a0_header") ) and
            dt_label_with_parent_compat_enabled("grove_btn_d15", "gpio-keys")
    extra_args: SHIELD=seeed_grove_base_v2;grove_btn_d15
  grove.base.v1.grove_btn.gpio.d15:
    depends_on: arduino_gpio
    filter: ( dt_nodelabel_enabled("grove_a1_header") or
              dt_nodelabel_enabled("grove_a0_header") ) and
            dt_label_with_parent_compat_enabled("grove_btn_d15", "gpio-keys")
    extra_args: SHIELD=seeed_grove_base_v1;grove_btn_d15
  grove.base.v2.grove_btn.gpio.d16:
    depends_on: arduino_gpio
    filter: ( dt_nodelabel_enabled("grove_a2_header") or
              dt_nodelabel_enabled("grove_a1_header") ) and
            dt_label_with_parent_compat_enabled("grove_btn_d16", "gpio-keys")
    extra_args: SHIELD=seeed_grove_base_v2;grove_btn_d16
    platform_exclude:
      - stm32mp157c_dk2
  grove.base.v1.grove_btn.gpio.d16:
    depends_on: arduino_gpio
    filter: ( dt_nodelabel_enabled("grove_a2_header") or
              dt_nodelabel_enabled("grove_a1_header") ) and
            dt_label_with_parent_compat_enabled("grove_btn_d16", "gpio-keys")
    extra_args: SHIELD=seeed_grove_base_v1;grove_btn_d16
    platform_exclude:
      - stm32mp157c_dk2
  grove.base.v2.grove_btn.gpio.d17:
    depends_on: arduino_gpio
    filter: ( dt_nodelabel_enabled("grove_a3_header") or
              dt_nodelabel_enabled("grove_a2_header") ) and
            dt_label_with_parent_compat_enabled("grove_btn_d17", "gpio-keys")
    extra_args: SHIELD=seeed_grove_base_v2;grove_btn_d17
    platform_exclude:
      - lpcxpresso55s16
      - stm32mp157c_dk2
  grove.base.v1.grove_btn.gpio.d17:
    depends_on: arduino_gpio
    filter: ( dt_nodelabel_enabled("grove_a3_header") or
              dt_nodelabel_enabled("grove_a2_header") ) and
            dt_label_with_parent_compat_enabled("grove_btn_d17", "gpio-keys")
    extra_args: SHIELD=seeed_grove_base_v1;grove_btn_d17
    platform_exclude:
      - lpcxpresso55s16
      - stm32mp157c_dk2
  grove.base.v2.grove_btn.gpio.d18:
    depends_on: arduino_gpio
    filter: ( dt_nodelabel_enabled("grove_a4_header") or
              dt_nodelabel_enabled("grove_a3_header") or
              dt_nodelabel_enabled("grove_i2c_header") ) and
            dt_label_with_parent_compat_enabled("grove_btn_d18", "gpio-keys")
    extra_args: SHIELD=seeed_grove_base_v2;grove_btn_d18
    platform_exclude:
      - pan1781_evb
      - pan1782_evb
  grove.base.v1.grove_btn.gpio.d18:
    depends_on: arduino_gpio
    filter: ( dt_nodelabel_enabled("grove_a4_header") or
              dt_nodelabel_enabled("grove_a3_header") or
              dt_nodelabel_enabled("grove_i2c_header") ) and
            dt_label_with_parent_compat_enabled("grove_btn_d18", "gpio-keys")
    extra_args: SHIELD=seeed_grove_base_v1;grove_btn_d18
    platform_exclude:
      - pan1781_evb
      - pan1782_evb
  grove.base.v2.grove_btn.gpio.d19:
    depends_on: arduino_gpio
    filter: (dt_nodelabel_enabled("grove_a4_header") or
              dt_nodelabel_enabled("grove_i2c_header") ) and
            dt_label_with_parent_compat_enabled("grove_btn_d19", "gpio-keys")
    extra_args: SHIELD=seeed_grove_base_v2;grove_btn_d19
    platform_exclude:
      - frdm_kw41z
      - pan1781_evb
      - pan1782_evb
  grove.base.v1.grove_btn.gpio.d19:
    depends_on: arduino_gpio
    filter: (dt_nodelabel_enabled("grove_a4_header") or
              dt_nodelabel_enabled("grove_i2c_header") ) and
            dt_label_with_parent_compat_enabled("grove_btn_d19", "gpio-keys")
    extra_args: SHIELD=seeed_grove_base_v1;grove_btn_d19
    platform_exclude:
      - frdm_kw41z
      - pan1781_evb
      - pan1782_evb
  #
  # Grove Button by simple GPIO on Grove Shield for Seeeduino XIAO
  #
  grove.xiao.v1.grove_btn.gpio.d0:
    depends_on: xiao_gpio
    filter: dt_nodelabel_enabled("grove_d0_header") and
            dt_label_with_parent_compat_enabled("grove_btn_d0", "gpio-keys")
    extra_args: SHIELD=seeed_grove_xiao_v1;grove_btn_d0
  grove.xiao.v1.grove_btn.gpio.d1:
    depends_on: xiao_gpio
    filter: ( dt_nodelabel_enabled("grove_d1_header") or
              dt_nodelabel_enabled("grove_d0_header") ) and
            dt_label_with_parent_compat_enabled("grove_btn_d1", "gpio-keys")
    extra_args: SHIELD=seeed_grove_xiao_v1;grove_btn_d1
  grove.xiao.v1.grove_btn.gpio.d2:
    depends_on: xiao_gpio
    filter: ( dt_nodelabel_enabled("grove_d2_header") or
              dt_nodelabel_enabled("grove_d1_header") ) and
            dt_label_with_parent_compat_enabled("grove_btn_d2", "gpio-keys")
    extra_args: SHIELD=seeed_grove_xiao_v1;grove_btn_d2
  grove.xiao.v1.grove_btn.gpio.d3:
    depends_on: xiao_gpio
    filter: ( dt_nodelabel_enabled("grove_d3_header") or
              dt_nodelabel_enabled("grove_d2_header") ) and
            dt_label_with_parent_compat_enabled("grove_btn_d3", "gpio-keys")
    extra_args: SHIELD=seeed_grove_xiao_v1;grove_btn_d3
  grove.xiao.v1.grove_btn.gpio.d4:
    depends_on: xiao_gpio
    filter: ( dt_nodelabel_enabled("grove_d4_header") or
              dt_nodelabel_enabled("grove_d5_header") ) and
            dt_nodelabel_enabled("grove_i2c_header") and
            dt_label_with_parent_compat_enabled("grove_btn_d4", "gpio-keys")
    extra_args: SHIELD=seeed_grove_xiao_v1;grove_btn_d4
  grove.xiao.v1.grove_btn.gpio.d5:
    depends_on: xiao_gpio
    filter: ( dt_nodelabel_enabled("grove_d5_header") or
              dt_nodelabel_enabled("grove_d4_header") ) and
            dt_nodelabel_enabled("grove_i2c_header") and
            dt_label_with_parent_compat_enabled("grove_btn_d5", "gpio-keys")
    extra_args: SHIELD=seeed_grove_xiao_v1;grove_btn_d5
  grove.xiao.v1.grove_btn.gpio.d6:
    depends_on: xiao_gpio
    filter: ( dt_nodelabel_enabled("grove_d6_header") or
              dt_nodelabel_enabled("grove_d7_header") ) and
            dt_nodelabel_enabled("grove_uart_header") and
            dt_label_with_parent_compat_enabled("grove_btn_d6", "gpio-keys")
    extra_args: SHIELD=seeed_grove_xiao_v1;grove_btn_d6
  grove.xiao.v1.grove_btn.gpio.d7:
    depends_on: xiao_gpio
    filter: ( dt_nodelabel_enabled("grove_d7_header") or
              dt_nodelabel_enabled("grove_d6_header") ) and
            dt_nodelabel_enabled("grove_uart_header") and
            dt_label_with_parent_compat_enabled("grove_btn_d7", "gpio-keys")
    extra_args: SHIELD=seeed_grove_xiao_v1;grove_btn_d7
  grove.xiao.v1.grove_btn.gpio.d8:
    depends_on: xiao_gpio
    filter: dt_nodelabel_enabled("grove_d8_header") and
            dt_label_with_parent_compat_enabled("grove_btn_d8", "gpio-keys")
    extra_args: SHIELD=seeed_grove_xiao_v1;grove_btn_d8
  grove.xiao.v1.grove_btn.gpio.d9:
    depends_on: xiao_gpio
    filter: ( dt_nodelabel_enabled("grove_d9_header") or
              dt_nodelabel_enabled("grove_d8_header") ) and
            dt_label_with_parent_compat_enabled("grove_btn_d9", "gpio-keys")
    extra_args: SHIELD=seeed_grove_xiao_v1;grove_btn_d9
  grove.xiao.v1.grove_btn.gpio.d10:
    depends_on: xiao_gpio
    filter: ( dt_nodelabel_enabled("grove_d10_header") or
              dt_nodelabel_enabled("grove_d9_header") ) and
            dt_label_with_parent_compat_enabled("grove_btn_d10", "gpio-keys")
    extra_args: SHIELD=seeed_grove_xiao_v1;grove_btn_d10
  #
  # Grove Button by simple GPIO on Grove Shield for Pi Pico
  #
  grove.rpipico.v1.grove_btn.gpio.d0:
    depends_on: pico_gpio
    filter: dt_nodelabel_enabled("grove_d1_header") and
            dt_nodelabel_enabled("grove_uart0_header") and
            dt_label_with_parent_compat_enabled("grove_btn_d0", "gpio-keys")
    extra_args: SHIELD=seeed_grove_rpipico_v1;grove_btn_d0
  grove.rpipico.v1.grove_btn.gpio.d1:
    depends_on: pico_gpio
    filter: dt_nodelabel_enabled("grove_d1_header") and
            dt_nodelabel_enabled("grove_uart0_header") and
            dt_label_with_parent_compat_enabled("grove_btn_d1", "gpio-keys")
    extra_args: SHIELD=seeed_grove_rpipico_v1;grove_btn_d1
  grove.rpipico.v1.grove_btn.gpio.d2:
    depends_on: pico_gpio
    filter: dt_nodelabel_enabled("generic_spi_header") and
            dt_label_with_parent_compat_enabled("grove_btn_d2", "gpio-keys")
    extra_args: SHIELD=seeed_grove_rpipico_v1;grove_btn_d2
  grove.rpipico.v1.grove_btn.gpio.d3:
    depends_on: pico_gpio
    filter: dt_nodelabel_enabled("generic_spi_header") and
            dt_label_with_parent_compat_enabled("grove_btn_d3", "gpio-keys")
    extra_args: SHIELD=seeed_grove_rpipico_v1;grove_btn_d3
  grove.rpipico.v1.grove_btn.gpio.d4:
    depends_on: pico_gpio
    filter: dt_nodelabel_enabled("grove_d5_header") and
            dt_nodelabel_enabled("grove_uart1_header") and
            dt_nodelabel_enabled("generic_spi_header") and
            dt_label_with_parent_compat_enabled("grove_btn_d4", "gpio-keys")
    extra_args: SHIELD=seeed_grove_rpipico_v1;grove_btn_d4
  grove.rpipico.v1.grove_btn.gpio.d5:
    depends_on: pico_gpio
    filter: dt_nodelabel_enabled("grove_d5_header") and
            dt_nodelabel_enabled("grove_uart1_header") and
            dt_nodelabel_enabled("generic_spi_header") and
            dt_label_with_parent_compat_enabled("grove_btn_d5", "gpio-keys")
    extra_args: SHIELD=seeed_grove_rpipico_v1;grove_btn_d5
  grove.rpipico.v1.grove_btn.gpio.d6:
    depends_on: pico_gpio
    filter: dt_nodelabel_enabled("grove_d7_header") and
            dt_nodelabel_enabled("grove_i2c1_header") and
            dt_label_with_parent_compat_enabled("grove_btn_d6", "gpio-keys")
    extra_args: SHIELD=seeed_grove_rpipico_v1;grove_btn_d6
  grove.rpipico.v1.grove_btn.gpio.d7:
    depends_on: pico_gpio
    filter: dt_nodelabel_enabled("grove_d7_header") and
            dt_nodelabel_enabled("grove_i2c1_header") and
            dt_label_with_parent_compat_enabled("grove_btn_d7", "gpio-keys")
    extra_args: SHIELD=seeed_grove_rpipico_v1;grove_btn_d7
  grove.rpipico.v1.grove_btn.gpio.d8:
    depends_on: pico_gpio
    filter: dt_nodelabel_enabled("grove_d9_header") and
            dt_nodelabel_enabled("grove_i2c0_header") and
            dt_label_with_parent_compat_enabled("grove_btn_d8", "gpio-keys")
    extra_args: SHIELD=seeed_grove_rpipico_v1;grove_btn_d8
  grove.rpipico.v1.grove_btn.gpio.d9:
    depends_on: pico_gpio
    filter: dt_nodelabel_enabled("grove_d9_header") and
            dt_nodelabel_enabled("grove_i2c0_header") and
            dt_label_with_parent_compat_enabled("grove_btn_d9", "gpio-keys")
    extra_args: SHIELD=seeed_grove_rpipico_v1;grove_btn_d9
  # grove.rpipico.v1.grove_btn.gpio.d10
  # grove.rpipico.v1.grove_btn.gpio.d11
  # grove.rpipico.v1.grove_btn.gpio.d12
  # grove.rpipico.v1.grove_btn.gpio.d13
  # grove.rpipico.v1.grove_btn.gpio.d14
  # grove.rpipico.v1.grove_btn.gpio.d15
  grove.rpipico.v1.grove_btn.gpio.d16:
    depends_on: pico_gpio
    filter: dt_nodelabel_enabled("grove_d16_header") and
            dt_label_with_parent_compat_enabled("grove_btn_d16", "gpio-keys")
    extra_args: SHIELD=seeed_grove_rpipico_v1;grove_btn_d16
    platform_allow:
      - rpi_pico
      - rpi_pico_w
      - waveshare_rp2040_lcd_0_96
      - waveshare_rp2040_plus
      - waveshare_rp2040_plus@16mb
  grove.rpipico.v1.grove_btn.gpio.d17:
    depends_on: pico_gpio
    filter: dt_nodelabel_enabled("grove_d16_header") and
            dt_label_with_parent_compat_enabled("grove_btn_d17", "gpio-keys")
    extra_args: SHIELD=seeed_grove_rpipico_v1;grove_btn_d17
    platform_allow:
      - rpi_pico
      - rpi_pico_w
      - waveshare_rp2040_lcd_0_96
      - waveshare_rp2040_plus
      - waveshare_rp2040_plus@16mb
  grove.rpipico.v1.grove_btn.gpio.d18:
    depends_on: pico_gpio
    filter: dt_nodelabel_enabled("grove_d18_header") and
            dt_label_with_parent_compat_enabled("grove_btn_d18", "gpio-keys")
    extra_args: SHIELD=seeed_grove_rpipico_v1;grove_btn_d18
    platform_allow:
      - rpi_pico
      - rpi_pico_w
      - waveshare_rp2040_lcd_0_96
      - waveshare_rp2040_plus
      - waveshare_rp2040_plus@16mb
  grove.rpipico.v1.grove_btn.gpio.d19:
    depends_on: pico_gpio
    filter: dt_nodelabel_enabled("grove_d18_header") and
            dt_label_with_parent_compat_enabled("grove_btn_d19", "gpio-keys")
    extra_args: SHIELD=seeed_grove_rpipico_v1;grove_btn_d19
    platform_allow:
      - rpi_pico
      - rpi_pico_w
      - waveshare_rp2040_lcd_0_96
      - waveshare_rp2040_plus
      - waveshare_rp2040_plus@16mb
  grove.rpipico.v1.grove_btn.gpio.d20:
    depends_on: pico_gpio
    filter: dt_nodelabel_enabled("grove_d20_header") and
            dt_label_with_parent_compat_enabled("grove_btn_d20", "gpio-keys")
    extra_args: SHIELD=seeed_grove_rpipico_v1;grove_btn_d20
    platform_allow:
      - rpi_pico
      - rpi_pico_w
      - waveshare_rp2040_lcd_0_96
      - waveshare_rp2040_plus
      - waveshare_rp2040_plus@16mb
  grove.rpipico.v1.grove_btn.gpio.d21:
    depends_on: pico_gpio
    filter: dt_nodelabel_enabled("grove_d20_header") and
            dt_label_with_parent_compat_enabled("grove_btn_d21", "gpio-keys")
    extra_args: SHIELD=seeed_grove_rpipico_v1;grove_btn_d21
    platform_allow:
      - rpi_pico
      - rpi_pico_w
      - waveshare_rp2040_lcd_0_96
      - waveshare_rp2040_plus
      - waveshare_rp2040_plus@16mb
  # grove.rpipico.v1.grove_btn.gpio.d22
  # grove.rpipico.v1.grove_btn.gpio.d23
  # grove.rpipico.v1.grove_btn.gpio.d24
  # grove.rpipico.v1.grove_btn.gpio.d25
  grove.rpipico.v1.grove_btn.gpio.d26:
    depends_on: pico_gpio
    filter: ( dt_nodelabel_enabled("grove_a0_header") or
              dt_nodelabel_enabled("grove_d26_header") ) and
            dt_label_with_parent_compat_enabled("grove_btn_d26", "gpio-keys")
    extra_args: SHIELD=seeed_grove_rpipico_v1;grove_btn_d26
  grove.rpipico.v1.grove_btn.gpio.d27:
    depends_on: pico_gpio
    filter: ( dt_nodelabel_enabled("grove_a1_header") or
              dt_nodelabel_enabled("grove_a0_header") or
              dt_nodelabel_enabled("grove_d27_header") ) and
            dt_label_with_parent_compat_enabled("grove_btn_d27", "gpio-keys")
    extra_args: SHIELD=seeed_grove_rpipico_v1;grove_btn_d27
  grove.rpipico.v1.grove_btn.gpio.d28:
    depends_on: pico_gpio
    filter: ( dt_nodelabel_enabled("grove_a2_header") or
              dt_nodelabel_enabled("grove_a1_header") or
              dt_nodelabel_enabled("grove_d28_header") ) and
            dt_label_with_parent_compat_enabled("grove_btn_d28", "gpio-keys")
    extra_args: SHIELD=seeed_grove_rpipico_v1;grove_btn_d28
  #
  # Grove Button by simple GPIO on Grove Connectors
  #
  grove.connectors.grove_btn.gpio.d0:
    depends_on: grove_gpio
    filter: ( dt_nodelabel_enabled("grove_d0_header") or
              dt_nodelabel_enabled("grove_uart_header") ) and
            dt_label_with_parent_compat_enabled("grove_btn_d0", "gpio-keys")
    extra_args: SHIELD=grove_btn_d0
  grove.connectors.grove_btn.gpio.d1:
    depends_on: grove_gpio
    filter: ( dt_nodelabel_enabled("grove_d1_header") or
              dt_nodelabel_enabled("grove_d0_header") or
              dt_nodelabel_enabled("grove_uart_header") ) and
            dt_label_with_parent_compat_enabled("grove_btn_d1", "gpio-keys")
    extra_args: SHIELD=grove_btn_d1
  grove.connectors.grove_btn.gpio.d2:
    depends_on: grove_gpio
    filter: ( dt_nodelabel_enabled("grove_d2_header") or
              dt_nodelabel_enabled("grove_d1_header") ) and
            dt_label_with_parent_compat_enabled("grove_btn_d2", "gpio-keys")
    extra_args: SHIELD=grove_btn_d2
    platform_allow:
      - seeeduino_lotus
  grove.connectors.grove_btn.gpio.d3:
    depends_on: grove_gpio
    filter: ( dt_nodelabel_enabled("grove_d3_header") or
              dt_nodelabel_enabled("grove_d2_header") ) and
            dt_label_with_parent_compat_enabled("grove_btn_d3", "gpio-keys")
    extra_args: SHIELD=grove_btn_d3
    platform_allow:
      - seeeduino_lotus
  grove.connectors.grove_btn.gpio.d4:
    depends_on: grove_gpio
    filter: ( dt_nodelabel_enabled("grove_d4_header") or
              dt_nodelabel_enabled("grove_d3_header") ) and
            dt_label_with_parent_compat_enabled("grove_btn_d4", "gpio-keys")
    extra_args: SHIELD=grove_btn_d4
    platform_allow:
      - seeeduino_lotus
  grove.connectors.grove_btn.gpio.d5:
    depends_on: grove_gpio
    filter: ( dt_nodelabel_enabled("grove_d5_header") or
              dt_nodelabel_enabled("grove_d4_header") ) and
            dt_label_with_parent_compat_enabled("grove_btn_d5", "gpio-keys")
    extra_args: SHIELD=grove_btn_d5
    platform_allow:
      - seeeduino_lotus
  grove.connectors.grove_btn.gpio.d6:
    depends_on: grove_gpio
    filter: ( dt_nodelabel_enabled("grove_d6_header") or
              dt_nodelabel_enabled("grove_d5_header") ) and
            dt_label_with_parent_compat_enabled("grove_btn_d6", "gpio-keys")
    extra_args: SHIELD=grove_btn_d6
    platform_allow:
      - seeeduino_lotus
  grove.connectors.grove_btn.gpio.d7:
    depends_on: grove_gpio
    filter: ( dt_nodelabel_enabled("grove_d7_header") or
              dt_nodelabel_enabled("grove_d6_header") ) and
            dt_label_with_parent_compat_enabled("grove_btn_d7", "gpio-keys")
    extra_args: SHIELD=grove_btn_d7
    platform_allow:
      - seeeduino_lotus
  grove.connectors.grove_btn.gpio.d8:
    depends_on: grove_gpio
    filter: ( dt_nodelabel_enabled("grove_d8_header") or
              dt_nodelabel_enabled("grove_d7_header") ) and
            dt_label_with_parent_compat_enabled("grove_btn_d8", "gpio-keys")
    extra_args: SHIELD=grove_btn_d8
    platform_allow:
      - seeeduino_lotus
  grove.connectors.grove_btn.gpio.d9:
    depends_on: grove_gpio
    filter: ( dt_nodelabel_enabled("grove_d9_header") or
              dt_nodelabel_enabled("grove_d8_header") ) and
            dt_label_with_parent_compat_enabled("grove_btn_d9", "gpio-keys")
    extra_args: SHIELD=grove_btn_d9
    skip: true
  grove.connectors.grove_btn.gpio.d10:
    depends_on: grove_gpio
    filter: ( dt_nodelabel_enabled("grove_d10_header") or
              dt_nodelabel_enabled("grove_d9_header") ) and
            dt_label_with_parent_compat_enabled("grove_btn_d10", "gpio-keys")
    extra_args: SHIELD=grove_btn_d10
    skip: true
  grove.connectors.grove_btn.gpio.d11:
    depends_on: grove_gpio
    filter: ( dt_nodelabel_enabled("grove_d11_header") or
              dt_nodelabel_enabled("grove_d10_header") ) and
            dt_label_with_parent_compat_enabled("grove_btn_d11", "gpio-keys")
    extra_args: SHIELD=grove_btn_d11
    skip: true
  grove.connectors.grove_btn.gpio.d12:
    depends_on: grove_gpio
    filter: ( dt_nodelabel_enabled("grove_d12_header") or
              dt_nodelabel_enabled("grove_d11_header") ) and
            dt_label_with_parent_compat_enabled("grove_btn_d12", "gpio-keys")
    extra_args: SHIELD=grove_btn_d12
    skip: true
  grove.connectors.grove_btn.gpio.d13:
    depends_on: grove_gpio
    filter: ( dt_nodelabel_enabled("grove_d13_header") or
              dt_nodelabel_enabled("grove_d12_header") ) and
            dt_label_with_parent_compat_enabled("grove_btn_d13", "gpio-keys")
    extra_args: SHIELD=grove_btn_d13
    skip: true
  grove.connectors.grove_btn.gpio.d14:
    depends_on: grove_gpio
    filter: ( dt_nodelabel_enabled("grove_d14_header") or
              dt_nodelabel_enabled("grove_d13_header") or
              dt_nodelabel_enabled("grove_a0_header") ) and
            dt_label_with_parent_compat_enabled("grove_btn_d14", "gpio-keys")
    extra_args: SHIELD=grove_btn_d14
    platform_allow:
      - seeeduino_lotus
  grove.connectors.grove_btn.gpio.d15:
    depends_on: grove_gpio
    filter: ( dt_nodelabel_enabled("grove_d15_header") or
              dt_nodelabel_enabled("grove_d14_header") or
              dt_nodelabel_enabled("grove_a1_header") or
              dt_nodelabel_enabled("grove_a0_header") ) and
            dt_label_with_parent_compat_enabled("grove_btn_d15", "gpio-keys")
    extra_args: SHIELD=grove_btn_d15
    platform_allow:
      - seeeduino_lotus
  grove.connectors.grove_btn.gpio.d16:
    depends_on: grove_gpio
    filter: ( dt_nodelabel_enabled("grove_d16_header") or
              dt_nodelabel_enabled("grove_d15_header") or
              dt_nodelabel_enabled("grove_a2_header") or
              dt_nodelabel_enabled("grove_a1_header") ) and
            dt_label_with_parent_compat_enabled("grove_btn_d16", "gpio-keys")
    extra_args: SHIELD=grove_btn_d16
    platform_allow:
      - seeeduino_lotus
  grove.connectors.grove_btn.gpio.d17:
    depends_on: grove_gpio
    filter: ( dt_nodelabel_enabled("grove_d17_header") or
              dt_nodelabel_enabled("grove_d16_header") or
              dt_nodelabel_enabled("grove_a3_header") or
              dt_nodelabel_enabled("grove_a2_header") ) and
            dt_label_with_parent_compat_enabled("grove_btn_d17", "gpio-keys")
    extra_args: SHIELD=grove_btn_d17
    platform_allow:
      - seeeduino_lotus
  grove.connectors.grove_btn.gpio.d18:
    depends_on: grove_gpio
    filter: ( dt_nodelabel_enabled("grove_d18_header") or
              dt_nodelabel_enabled("grove_i2c_header") or
              dt_nodelabel_enabled("grove_a4_header") ) and
            dt_label_with_parent_compat_enabled("grove_btn_d18", "gpio-keys")
    extra_args: SHIELD=grove_btn_d18
  grove.connectors.grove_btn.gpio.d19:
    depends_on: grove_gpio
    filter: ( dt_nodelabel_enabled("grove_d19_header") or
              dt_nodelabel_enabled("grove_i2c_header") or
              dt_nodelabel_enabled("grove_a5_header") ) and
            dt_label_with_parent_compat_enabled("grove_btn_d19", "gpio-keys")
    extra_args: SHIELD=grove_btn_d19
  grove.connectors.grove_btn.gpio.d20:
    depends_on: grove_gpio
    filter: ( dt_nodelabel_enabled("grove_d20_header") or
              dt_nodelabel_enabled("grove_a6_header") ) and
            dt_label_with_parent_compat_enabled("grove_btn_d20", "gpio-keys")
    extra_args: SHIELD=grove_btn_d20
    skip: true
  grove.connectors.grove_btn.gpio.d21:
    depends_on: grove_gpio
    filter: ( dt_nodelabel_enabled("grove_d21_header") or
              dt_nodelabel_enabled("grove_d20_header") ) and
            dt_label_with_parent_compat_enabled("grove_btn_d21", "gpio-keys")
    extra_args: SHIELD=grove_btn_d21
    skip: true
  grove.connectors.grove_btn.gpio.d22:
    depends_on: grove_gpio
    filter: ( dt_nodelabel_enabled("grove_d22_header") or
              dt_nodelabel_enabled("grove_d21_header") ) and
            dt_label_with_parent_compat_enabled("grove_btn_d22", "gpio-keys")
    extra_args: SHIELD=grove_btn_d22
    skip: true
  grove.connectors.grove_btn.gpio.d23:
    depends_on: grove_gpio
    filter: ( dt_nodelabel_enabled("grove_d23_header") or
              dt_nodelabel_enabled("grove_d22_header") ) and
            dt_label_with_parent_compat_enabled("grove_btn_d23", "gpio-keys")
    extra_args: SHIELD=grove_btn_d23
    skip: true
  grove.connectors.grove_btn.gpio.d24:
    depends_on: grove_gpio
    filter: ( dt_nodelabel_enabled("grove_d24_header") or
              dt_nodelabel_enabled("grove_d23_header") ) and
            dt_label_with_parent_compat_enabled("grove_btn_d24", "gpio-keys")
    extra_args: SHIELD=grove_btn_d24
    skip: true
  grove.connectors.grove_btn.gpio.d25:
    depends_on: grove_gpio
    filter: ( dt_nodelabel_enabled("grove_d25_header") or
              dt_nodelabel_enabled("grove_d24_header") ) and
            dt_label_with_parent_compat_enabled("grove_btn_d25", "gpio-keys")
    extra_args: SHIELD=grove_btn_d25
    skip: true
  grove.connectors.grove_btn.gpio.d26:
    depends_on: grove_gpio
    filter: ( dt_nodelabel_enabled("grove_d26_header") or
              dt_nodelabel_enabled("grove_d25_header") ) and
            dt_label_with_parent_compat_enabled("grove_btn_d26", "gpio-keys")
    extra_args: SHIELD=grove_btn_d26
    skip: true
  grove.connectors.grove_btn.gpio.d27:
    depends_on: grove_gpio
    filter: ( dt_nodelabel_enabled("grove_d27_header") or
              dt_nodelabel_enabled("grove_d26_header") ) and
            dt_label_with_parent_compat_enabled("grove_btn_d27", "gpio-keys")
    extra_args: SHIELD=grove_btn_d27
    skip: true
  grove.connectors.grove_btn.gpio.d28:
    depends_on: grove_gpio
    filter: ( dt_nodelabel_enabled("grove_d28_header") or
              dt_nodelabel_enabled("grove_d27_header") ) and
            dt_label_with_parent_compat_enabled("grove_btn_d28", "gpio-keys")
    extra_args: SHIELD=grove_btn_d28
    skip: true
  grove.connectors.grove_btn.gpio.d29:
    depends_on: grove_gpio
    filter: ( dt_nodelabel_enabled("grove_d29_header") or
              dt_nodelabel_enabled("grove_d28_header") ) and
            dt_label_with_parent_compat_enabled("grove_btn_d29", "gpio-keys")
    extra_args: SHIELD=grove_btn_d29
    skip: true
  grove.connectors.grove_btn.gpio.d30:
    depends_on: grove_gpio
    filter: ( dt_nodelabel_enabled("grove_d30_header") or
              dt_nodelabel_enabled("grove_d29_header") ) and
            dt_label_with_parent_compat_enabled("grove_btn_d30", "gpio-keys")
    extra_args: SHIELD=grove_btn_d30
    skip: true
  grove.connectors.grove_btn.gpio.d31:
    depends_on: grove_gpio
    filter: ( dt_nodelabel_enabled("grove_d31_header") or
              dt_nodelabel_enabled("grove_d30_header") ) and
            dt_label_with_parent_compat_enabled("grove_btn_d31", "gpio-keys")
    extra_args: SHIELD=grove_btn_d31
    skip: true
