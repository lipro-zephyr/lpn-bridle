# Copyright (c) 2021-2022 TiaC Systems
# Copyright (c) 2021 Li-Pro.Net
# SPDX-License-Identifier: Apache-2.0

name: QA Integration Test

on:
  schedule:
    - cron: "0 2 * * *" # run at 2 AM UTC
  workflow_dispatch: # And manually on button click
  pull_request:
    types: [opened, synchronize, reopened]
    paths:
      - 'applications/**'
      - 'arch/**'
      - 'boards/**'
      - 'cmake/**'
      - 'drivers/**'
      - 'dts/**'
      - 'include/**'
      - 'lib/**'
      - 'modules/**'
      - 'samples/**'
      - 'services/**'
      - 'tests/**'
      - 'soc/**'
      - 'subsys/**'
      - '**/CMakeLists.txt'
      - '**/Kconfig*'
      - '**.conf'
      - '**.defconfig'
      - '**.overlay'
      - '**.yaml'
      - 'scripts/requirements-*'
      - 'scripts/requirements.txt'
      - 'west.yml'
      - '.github/workflows/qa-integration.yml'

jobs:
  qa-integration:
    name: Run integration tests on targets
    runs-on: [self-hosted, linux, gnuarmemb, zephyr-sdk, tiac_magpie]

    strategy:
      matrix:
        board: [tiac_magpie]

    steps:
      - name: Update GitHub PATH for west
        run: |
          echo "$HOME/.local/bin" >> $GITHUB_PATH

      - name: Clean working directory
        run: |
          rm -rf "${{ github.workspace }}/workspace"

      - name: Checkout the code
        uses: actions/checkout@v3
        with:
          path: workspace/bridle
          submodules: recursive
          ref: ${{ github.ref }}

      - name: Install base dependencies
        working-directory: workspace
        run: |
          pip3 install --upgrade pip
          pip3 install --upgrade setuptools
          pip3 install --upgrade --requirement bridle/scripts/requirements-base.txt

      - name: West init and update
        working-directory: workspace
        run: |
          west init -l bridle
          west update
          west zephyr-export
          west bridle-export

      - name: Install build and test dependencies
        working-directory: workspace
        run: |
          pip3 install --upgrade --requirement zephyr/scripts/requirements-base.txt
          pip3 install --upgrade --requirement zephyr/scripts/requirements-build-test.txt
          pip3 install --upgrade --requirement zephyr/scripts/requirements-run-test.txt
          pip3 install --upgrade --requirement zephyr/scripts/requirements-extras.txt
          pip3 install --upgrade --requirement zephyr/scripts/requirements-compliance.txt
          pip3 install --upgrade --requirement bridle/scripts/requirements-build.txt

      - name: Execute integration tests on target
        working-directory: workspace
        env:
          HARDWARE_MAP: bridle/.github/${{ github.job }}/map-${{ matrix.board }}.yml
        run: |
          #
          # Disabled in the meantime because the execution time is still
          # too high and most of the core tests are already performed by
          # Zephyr in any case:
          #
          # --testsuite-root zephyr/tests/kernel \
          # --testsuite-root zephyr/tests/arch/arm \
          #
          export ZEPHYR_BASE="$(pwd)/zephyr"
          export BRIDLE_BASE="$(pwd)/bridle"
          ./zephyr/scripts/twister --verbose --jobs 4 --inline-logs \
            --enable-size-report --platform-reports \
            --device-testing --hardware-map ${HARDWARE_MAP} \
            --extra-args SHIELD="loopback_test_tmph can_timing_adj" \
            --board-root bridle/boards \
            --testsuite-root bridle/tests/bridle \
            --testsuite-root zephyr/tests/crypto/rand32 \
            --testsuite-root zephyr/tests/drivers/entropy \
            --testsuite-root zephyr/tests/drivers/watchdog \
            --testsuite-root bridle/tests/drivers/watchdog \
            --testsuite-root zephyr/tests/drivers/counter \
            --testsuite-root zephyr/tests/drivers/hwinfo \
            --testsuite-root zephyr/tests/drivers/gpio \
            --testsuite-root zephyr/tests/drivers/spi \
            --testsuite-root zephyr/tests/drivers/can
        continue-on-error: true

      - name: Upload results
        uses: actions/upload-artifact@v3
        with:
          name: twister_report.xml
          path: workspace/twister-out/twister_report.xml
        continue-on-error: true

      - name: Convert integration test reports to annotations
        uses: mikepenz/action-junit-report@v3
        with:
          check_name: twister-report (${{ matrix.board }})
          report_paths: "**/twister-out/twister_report.xml"
          require_tests: true
          fail_on_failure: false
        if: always()
